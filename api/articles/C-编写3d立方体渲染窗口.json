{"title":"C#编写3d立方体渲染窗口","slug":"C-编写3d立方体渲染窗口","date":"2020-03-06T06:56:59.000Z","updated":"2020-03-13T09:32:45.581Z","comments":true,"path":"api/articles/C-编写3d立方体渲染窗口.json","photos":[],"link":"","excerpt":null,"covers":["../image/002.gif","../image/裁剪矩阵.png"],"content":"<p>之前使用C#编写了一个立方体的渲染窗口。效果如下：<br><img src=\"../image/002.gif\" alt=\"窗口\"><br>粗糙地实现了一个立方体基本漫反射和全局光。让立方体随时间旋转。<br>本文主要讲一下摄像机部分的代码，和一个编写过程中的小问题。</p>\n<h1 id=\"摄像机类\"><a href=\"#摄像机类\" class=\"headerlink\" title=\"摄像机类\"></a>摄像机类</h1><h2 id=\"摄像机属性\"><a href=\"#摄像机属性\" class=\"headerlink\" title=\"摄像机属性\"></a>摄像机属性</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">private double posX,posY,posZ;//摄像机位置</span><br><span class=\"line\">private double xAngle, yAngle, zAngle;//摄像机旋转角度</span><br><span class=\"line\">private Vector4 xAxle, yAxle, zAxle;//摄像机坐标空间的下x、y、z轴在世界空间中的表示</span><br><span class=\"line\">private double fov;//视野角度</span><br><span class=\"line\">private double aspect;//宽比高</span><br><span class=\"line\">private double near;//近裁距离</span><br><span class=\"line\">private double far;//远裁距离</span><br></pre></td></tr></table></figure>\n<p>摄像机类的属性主要包括摄像机位置、摄像机旋转角度、摄像机坐标空间的下x、y、z轴在世界空间中的表示、视野角度、近裁距离和远裁距离。</p>\n<h2 id=\"摄像机类构造器\"><a href=\"#摄像机类构造器\" class=\"headerlink\" title=\"摄像机类构造器\"></a>摄像机类构造器</h2><p>没啥说的，构造器。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public Camera() &#123; &#125;</span><br><span class=\"line\">public Camera(double x,double y,double z)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tthis.fov = 90;</span><br><span class=\"line\">\tthis.aspect = 1;</span><br><span class=\"line\">\tthis.near = 2;</span><br><span class=\"line\">\tthis.far = 20000;</span><br><span class=\"line\">\tthis.posX = x;</span><br><span class=\"line\">\tthis.posY = y;</span><br><span class=\"line\">\tthis.posZ = z;</span><br><span class=\"line\">\tthis.xAngle = 0;</span><br><span class=\"line\">\tthis.yAngle = 0;</span><br><span class=\"line\">\tthis.zAngle = 0;</span><br><span class=\"line\">\tthis.xAxle = new Vector4(1, 0, 0, 0);</span><br><span class=\"line\">\tthis.yAxle = new Vector4(0, 1, 0, 0);</span><br><span class=\"line\">\tthis.zAxle = new Vector4(0, 0, 1, 0);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"摄像机类GetWorldtoView方法\"><a href=\"#摄像机类GetWorldtoView方法\" class=\"headerlink\" title=\"摄像机类GetWorldtoView方法\"></a>摄像机类GetWorldtoView方法</h2><p>调用此方法将返回一个世界空间到摄像机空间的变换矩阵。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public Matrix4x4 GetWorldtoView()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tMatrix4x4 view = new Matrix4x4();</span><br><span class=\"line\">\tview[4, 1] = posX;</span><br><span class=\"line\">\tview[4, 2] = posY;</span><br><span class=\"line\">\tview[4, 3] = posZ;</span><br><span class=\"line\">\tview[4, 4] = 1;</span><br><span class=\"line\">\tview[1, 1] = xAxle.x;</span><br><span class=\"line\">\tview[2, 1] = xAxle.y;</span><br><span class=\"line\">\tview[3, 1] = xAxle.z;</span><br><span class=\"line\">\tview[1, 2] = yAxle.x;</span><br><span class=\"line\">\tview[2, 2] = yAxle.y;</span><br><span class=\"line\">\tview[3, 2] = yAxle.z;</span><br><span class=\"line\">\tview[1, 3] = zAxle.x;</span><br><span class=\"line\">\tview[2, 3] = zAxle.y;</span><br><span class=\"line\">\tview[3, 3] = zAxle.z;</span><br><span class=\"line\">\treturn view;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"摄像机类的GetClip方法\"><a href=\"#摄像机类的GetClip方法\" class=\"headerlink\" title=\"摄像机类的GetClip方法\"></a>摄像机类的GetClip方法</h2><p>调用此方法返回一个摄像机空间到透视裁减空间的变换矩阵。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public Matrix4x4 GetClip()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tMatrix4x4 m = new Matrix4x4();</span><br><span class=\"line\">\tm[1, 1] = Math.Cos(this.fov / 360.0 * Math.PI) / this.aspect;</span><br><span class=\"line\">\tm[2, 2] = Math.Cos(this.fov / 360.0 * Math.PI);</span><br><span class=\"line\">\tm[3, 3] = -(this.far + this.near) / (this.far - this.near);</span><br><span class=\"line\">\tm[4, 3] = -(2 * this.near * this.far) / (this.far - this.near);</span><br><span class=\"line\">\tm[3, 4] = -1;</span><br><span class=\"line\">\treturn m;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>裁减空间变换矩阵：<br><img src=\"../image/裁剪矩阵.png\" alt=\"矩阵\"><br>图片来自网络<br>矩阵将xyz轴分别进行了缩放，使物体呈现近大远小的效果，并且满足-w≤x≤w、-w≤y≤w、-w≤z≤w的顶点才能不被剔除或裁减。</p>\n<h1 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h1><p>在编写过程中遇到个问题，立方体在旋转过程中不断的闪烁。查阅网络发现是没有开启双缓冲。只要在窗体类中的load方法中增加一下语句即可解决：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">this.SetStyle(ControlStyles.OptimizedDoubleBuffer | ControlStyles.ResizeRedraw | ControlStyles.AllPaintingInWmPaint, true);</span><br><span class=\"line\">this.UpdateStyles();</span><br></pre></td></tr></table></figure></p>\n","categories":[],"tags":[]}