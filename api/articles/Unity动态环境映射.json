{"title":"Unity动态环境映射","slug":"Unity动态环境映射","date":"2020-02-15T08:29:00.000Z","updated":"2020-03-13T09:33:06.895Z","comments":true,"path":"api/articles/Unity动态环境映射.json","photos":[],"link":"","excerpt":null,"covers":["../image/映射.png"],"content":"<h1 id=\"使用C-脚本和shader实现动态环境映射\"><a href=\"#使用C-脚本和shader实现动态环境映射\" class=\"headerlink\" title=\"使用C#脚本和shader实现动态环境映射\"></a>使用C#脚本和shader实现动态环境映射</h1><h2 id=\"shader编写\"><a href=\"#shader编写\" class=\"headerlink\" title=\"shader编写\"></a>shader编写</h2><h3 id=\"反射\"><a href=\"#反射\" class=\"headerlink\" title=\"反射\"></a>反射</h3><p>先上代码<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Shader &quot;Custom/Reflection&quot;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    Properties</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        _Color (&quot;Color&quot;, Color) = (1,1,1,1)</span><br><span class=\"line\">        _ReflectColor(&quot;ReflectColor&quot;,Color) = (1,1,1,1)</span><br><span class=\"line\">        _ReflectAmount(&quot;ReflectAmount&quot;,Range(0,1)) = 1</span><br><span class=\"line\">        _Cubemap(&quot;Reflect Cubemap&quot;,Cube) = &quot;_Skybox&quot; &#123;&#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    SubShader</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">    \tpass&#123;</span><br><span class=\"line\">\t        Tags &#123; &quot;RenderType&quot;=&quot;Opaque&quot; &#125;</span><br><span class=\"line\">\t        LOD 200</span><br><span class=\"line\"></span><br><span class=\"line\">\t        CGPROGRAM</span><br><span class=\"line\">\t        // Physically based Standard lighting model, and enable shadows on all light types</span><br><span class=\"line\">\t        #pragma vertex vert</span><br><span class=\"line\">\t        #pragma fragment frag </span><br><span class=\"line\">\t        #include &quot;UnityCG.cginc&quot; </span><br><span class=\"line\">\t        #include &quot;Lighting.cginc&quot; </span><br><span class=\"line\">\t        #include &quot;AutoLight.cginc&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t        float4 _Color;</span><br><span class=\"line\">\t        float4 _ReflectColor;</span><br><span class=\"line\">\t        half _ReflectAmount;</span><br><span class=\"line\">\t        samplerCUBE _Cubemap;</span><br><span class=\"line\"></span><br><span class=\"line\">\t        struct a2v</span><br><span class=\"line\">\t        &#123;</span><br><span class=\"line\">\t            float4 vertex : POSITION;</span><br><span class=\"line\">\t\t\t    float3 normal : NORMAL;</span><br><span class=\"line\">\t        &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">\t        struct v2f &#123;</span><br><span class=\"line\">\t            float4 pos:POSITION ;</span><br><span class=\"line\">\t            float3 normal:NORMAL;</span><br><span class=\"line\">\t            float4 worldPos:TEXCOORD0;</span><br><span class=\"line\">\t            float3 worldViewDir:TEXCOORD1 ;</span><br><span class=\"line\"></span><br><span class=\"line\">\t            SHADOW_COORDS(3)</span><br><span class=\"line\">\t        &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">\t        v2f vert(a2v v) &#123;</span><br><span class=\"line\">\t            v2f o;</span><br><span class=\"line\">\t            o.pos = UnityObjectToClipPos(v.vertex);</span><br><span class=\"line\">\t            o.normal = v.normal;</span><br><span class=\"line\">\t            o.worldPos = mul(unity_ObjectToWorld,v.vertex );</span><br><span class=\"line\">\t            o.worldViewDir = UnityWorldSpaceViewDir(o.worldPos);</span><br><span class=\"line\"></span><br><span class=\"line\">\t            TRANSFER_SHADOW(o);</span><br><span class=\"line\">\t            return o;</span><br><span class=\"line\">\t        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t        fixed4 frag(v2f IN) :SV_Target&#123;</span><br><span class=\"line\">\t        \tfloat3 worldNormal = normalize(UnityObjectToWorldNormal(IN.normal));</span><br><span class=\"line\">\t        \tfloat3 worldLightDir = normalize(UnityWorldSpaceLightDir(IN.worldPos));</span><br><span class=\"line\">\t        \tfloat3 worldViewDir = normalize(IN.worldViewDir);</span><br><span class=\"line\">\t        \tfloat3 worldRefl = reflect(-worldViewDir,worldNormal);</span><br><span class=\"line\"></span><br><span class=\"line\">\t        \tfloat3 ambient = UNITY_LIGHTMODEL_AMBIENT.xyz;</span><br><span class=\"line\">\t        \tfloat3 diffuse = _LightColor0.rgb*_Color.rgb * max(0,dot(worldNormal ,worldLightDir));</span><br><span class=\"line\">\t        \tfloat3 reflection = texCUBE(_Cubemap,worldRefl ).rgb*_ReflectColor.rgb;</span><br><span class=\"line\">\t        \tUNITY_LIGHT_ATTENUATION(atten,IN,IN.worldPos);</span><br><span class=\"line\"></span><br><span class=\"line\">\t        \tfloat3 col = ambient+lerp(diffuse,reflection,_ReflectAmount)*atten;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t            return float4(col,1.0);</span><br><span class=\"line\">\t        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t        ENDCG</span><br><span class=\"line\">\t    &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    FallBack &quot;Diffuse&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>主要思路就是取得世界坐标系下的观察方向向量（worldViewDir）和世界坐标系下的法线向量。一起带入reflect（）函数，得出反射方向向量（worldRefl）。反射向量和_Cubemap一同带入texCUBE（）函数取得映射出的颜色，与反射颜色，漫反射颜色等相乘输出结果。</p>\n<h3 id=\"折射\"><a href=\"#折射\" class=\"headerlink\" title=\"折射\"></a>折射</h3><p>折射与反射类似，但是增加了一项反射率。稍微改改就可以了。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Shader &quot;Custom/refraction&quot;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    Properties</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        _Color (&quot;Color&quot;, Color) = (1,1,1,1)</span><br><span class=\"line\">        _RefractColor(&quot;RefractionColor&quot;,Color) = (1,1,1,1)</span><br><span class=\"line\">        _RefractAmount(&quot;RefractionAmount&quot;,Range(0,1)) = 1</span><br><span class=\"line\">        _RefractRatio(&quot;RefractRatio&quot;,Range(0,1)) = 0.5</span><br><span class=\"line\">        _Cubemap(&quot;Refraction Cubemap&quot;,Cube) = &quot;_Skybox&quot; &#123;&#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    SubShader</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">    \tpass&#123;</span><br><span class=\"line\">\t        Tags &#123; &quot;RenderType&quot;=&quot;Opaque&quot; &#125;</span><br><span class=\"line\">\t        LOD 200</span><br><span class=\"line\"></span><br><span class=\"line\">\t        CGPROGRAM</span><br><span class=\"line\">\t        // Physically based Standard lighting model, and enable shadows on all light types</span><br><span class=\"line\">\t        #pragma vertex vert</span><br><span class=\"line\">\t        #pragma fragment frag </span><br><span class=\"line\">\t        #include &quot;UnityCG.cginc&quot; </span><br><span class=\"line\">\t        #include &quot;Lighting.cginc&quot; </span><br><span class=\"line\">\t        #include &quot;AutoLight.cginc&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t        float4 _Color;</span><br><span class=\"line\">\t        float4 _RefractColor;</span><br><span class=\"line\">\t        half _RefractRatio;</span><br><span class=\"line\">\t        half _RefractAmount;</span><br><span class=\"line\">\t        samplerCUBE _Cubemap;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t        struct a2v</span><br><span class=\"line\">\t        &#123;</span><br><span class=\"line\">\t            float4 vertex : POSITION;</span><br><span class=\"line\">\t\t\t    float3 normal : NORMAL;</span><br><span class=\"line\">\t        &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">\t        struct v2f &#123;</span><br><span class=\"line\">\t            float4 pos:POSITION ;</span><br><span class=\"line\">\t            float3 normal:NORMAL;</span><br><span class=\"line\">\t            float4 worldPos:TEXCOORD0;</span><br><span class=\"line\">\t            float3 worldViewDir:TEXCOORD1 ;</span><br><span class=\"line\"></span><br><span class=\"line\">\t            SHADOW_COORDS(3)</span><br><span class=\"line\">\t        &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">\t        v2f vert(a2v v) &#123;</span><br><span class=\"line\">\t            v2f o;</span><br><span class=\"line\">\t            o.pos = UnityObjectToClipPos(v.vertex);</span><br><span class=\"line\">\t            o.normal = v.normal;</span><br><span class=\"line\">\t            o.worldPos = mul(unity_ObjectToWorld,v.vertex );</span><br><span class=\"line\">\t            o.worldViewDir = UnityWorldSpaceViewDir(o.worldPos);</span><br><span class=\"line\"></span><br><span class=\"line\">\t            TRANSFER_SHADOW(o);</span><br><span class=\"line\">\t            return o;</span><br><span class=\"line\">\t        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t        fixed4 frag(v2f IN) :SV_Target&#123;</span><br><span class=\"line\">\t        \tfloat3 worldNormal = normalize(UnityObjectToWorldNormal(IN.normal));</span><br><span class=\"line\">\t        \tfloat3 worldLightDir = normalize(UnityWorldSpaceLightDir(IN.worldPos));</span><br><span class=\"line\">\t        \tfloat3 worldViewDir = normalize(IN.worldViewDir);</span><br><span class=\"line\">\t        \tfloat3 worldRefr = refract(-worldViewDir,worldNormal,_RefractRatio);</span><br><span class=\"line\"></span><br><span class=\"line\">\t        \tfloat3 ambient = UNITY_LIGHTMODEL_AMBIENT.xyz;</span><br><span class=\"line\">\t        \tfloat3 diffuse = _Color.rgb * max(0,dot(worldNormal ,worldLightDir));</span><br><span class=\"line\">\t        \tfloat3 refraction = texCUBE(_Cubemap,worldRefr ).rgb*_RefractColor.rgb;</span><br><span class=\"line\">\t        \tUNITY_LIGHT_ATTENUATION(atten,IN,IN.worldPos);</span><br><span class=\"line\"></span><br><span class=\"line\">\t        \tfloat3 col = ambient+lerp(diffuse,refraction,_RefractAmount)*atten;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t            return float4(col,1.0);</span><br><span class=\"line\">\t        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t        ENDCG</span><br><span class=\"line\">\t    &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    FallBack &quot;Diffuse&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"菲涅尔反射\"><a href=\"#菲涅尔反射\" class=\"headerlink\" title=\"菲涅尔反射\"></a>菲涅尔反射</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Shader &quot;Custom/Fresnel&quot;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    Properties</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        _Color (&quot;Color&quot;, Color) = (1,1,1,1)</span><br><span class=\"line\">        _FresnelScale(&quot;FresnelScale&quot;,Range(0,1)) = 0.5</span><br><span class=\"line\">        _Cubemap(&quot;Reflect Cubemap&quot;,Cube) = &quot;_Skybox&quot; &#123;&#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    SubShader</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">    \tpass&#123;</span><br><span class=\"line\">\t        Tags &#123; &quot;RenderType&quot;=&quot;Opaque&quot; &#125;</span><br><span class=\"line\">\t        LOD 200</span><br><span class=\"line\"></span><br><span class=\"line\">\t        CGPROGRAM</span><br><span class=\"line\">\t        // Physically based Standard lighting model, and enable shadows on all light types</span><br><span class=\"line\">\t        #pragma vertex vert</span><br><span class=\"line\">\t        #pragma fragment frag </span><br><span class=\"line\">\t        #include &quot;UnityCG.cginc&quot; </span><br><span class=\"line\">\t        #include &quot;Lighting.cginc&quot; </span><br><span class=\"line\">\t        #include &quot;AutoLight.cginc&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t        float4 _Color;</span><br><span class=\"line\">\t        half _FresnelScale;</span><br><span class=\"line\">\t        samplerCUBE _Cubemap;</span><br><span class=\"line\"></span><br><span class=\"line\">\t        struct a2v</span><br><span class=\"line\">\t        &#123;</span><br><span class=\"line\">\t            float4 vertex : POSITION;</span><br><span class=\"line\">\t\t\t    float3 normal : NORMAL;</span><br><span class=\"line\">\t        &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">\t        struct v2f &#123;</span><br><span class=\"line\">\t            float4 pos:POSITION ;</span><br><span class=\"line\">\t            float3 normal:NORMAL;</span><br><span class=\"line\">\t            float4 worldPos:TEXCOORD0;</span><br><span class=\"line\">\t            float3 worldViewDir:TEXCOORD1 ;</span><br><span class=\"line\"></span><br><span class=\"line\">\t            SHADOW_COORDS(3)</span><br><span class=\"line\">\t        &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">\t        v2f vert(a2v v) &#123;</span><br><span class=\"line\">\t            v2f o;</span><br><span class=\"line\">\t            o.pos = UnityObjectToClipPos(v.vertex);</span><br><span class=\"line\">\t            o.normal = v.normal;</span><br><span class=\"line\">\t            o.worldPos = mul(unity_ObjectToWorld,v.vertex );</span><br><span class=\"line\">\t            o.worldViewDir = UnityWorldSpaceViewDir(o.worldPos);</span><br><span class=\"line\"></span><br><span class=\"line\">\t            TRANSFER_SHADOW(o);</span><br><span class=\"line\">\t            return o;</span><br><span class=\"line\">\t        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t        fixed4 frag(v2f IN) :SV_Target&#123;</span><br><span class=\"line\">\t        \tfloat3 worldNormal = normalize(UnityObjectToWorldNormal(IN.normal));</span><br><span class=\"line\">\t        \tfloat3 worldLightDir = normalize(UnityWorldSpaceLightDir(IN.worldPos));</span><br><span class=\"line\">\t        \tfloat3 worldViewDir = normalize(IN.worldViewDir);</span><br><span class=\"line\">\t        \tfloat3 worldRefl = reflect(-worldViewDir,worldNormal);</span><br><span class=\"line\"></span><br><span class=\"line\">\t        \tfloat3 ambient = UNITY_LIGHTMODEL_AMBIENT.xyz;</span><br><span class=\"line\">\t        \tfloat3 diffuse = _LightColor0.rgb*_Color.rgb * max(0,dot(worldNormal ,worldLightDir));</span><br><span class=\"line\">\t        \t</span><br><span class=\"line\">\t        \tfloat3 reflection = texCUBE(_Cubemap,worldRefl ).rgb;</span><br><span class=\"line\">\t        \tfloat3 fresnel = _FresnelScale+(1-_FresnelScale)*pow(1-dot(worldViewDir,worldNormal),5);</span><br><span class=\"line\"></span><br><span class=\"line\">\t        \tUNITY_LIGHT_ATTENUATION(atten,IN,IN.worldPos);</span><br><span class=\"line\"></span><br><span class=\"line\">\t        \tfloat3 col = ambient+lerp(diffuse,reflection,saturate(fresnel))*atten;</span><br><span class=\"line\"></span><br><span class=\"line\">\t            return float4(col,1.0);</span><br><span class=\"line\">\t        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t        ENDCG</span><br><span class=\"line\">\t    &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    FallBack &quot;Diffuse&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h3><p>这里三个shader中反射向量的计算都放在了片元着色器中，实际上放在顶点着色器里头就能达到很好的效果。且不那么占用系统资源。</p>\n<h2 id=\"C-代码\"><a href=\"#C-代码\" class=\"headerlink\" title=\"C#代码\"></a>C#代码</h2><p>这里的c#脚步直接摘录的unity文档中的代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">using UnityEngine;</span><br><span class=\"line\"></span><br><span class=\"line\">[ExecuteInEditMode]</span><br><span class=\"line\">public class RealtimeCubemap : MonoBehaviour</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    // Attach this script to an object that uses a Reflective shader.</span><br><span class=\"line\">    // Realtime reflective cubemaps!</span><br><span class=\"line\"></span><br><span class=\"line\">    int cubemapSize = 128;</span><br><span class=\"line\">    bool oneFacePerFrame = false;</span><br><span class=\"line\">    Camera cam;</span><br><span class=\"line\">    RenderTexture renderTexture;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    void Start()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        // render all six faces at startup</span><br><span class=\"line\">        UpdateCubemap(63);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    void OnDisable()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        DestroyImmediate(cam);</span><br><span class=\"line\">        DestroyImmediate(renderTexture);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    void LateUpdate()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        if (oneFacePerFrame)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            var faceToRender = Time.frameCount % 6;</span><br><span class=\"line\">            var faceMask = 1 &lt;&lt; faceToRender;</span><br><span class=\"line\">            UpdateCubemap(faceMask);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            UpdateCubemap(63); // all six faces</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    void UpdateCubemap(int faceMask)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        if (!cam)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            GameObject obj = new GameObject(&quot;CubemapCamera&quot;, typeof(Camera));</span><br><span class=\"line\">            obj.hideFlags = HideFlags.HideAndDontSave;</span><br><span class=\"line\">            obj.transform.position = transform.position;</span><br><span class=\"line\">            obj.transform.rotation = Quaternion.identity;</span><br><span class=\"line\">            cam = obj.GetComponent&lt;Camera&gt;();</span><br><span class=\"line\">            cam.farClipPlane = 100; // don&apos;t render very far into cubemap</span><br><span class=\"line\">            cam.enabled = false;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        if (!renderTexture)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            renderTexture = new RenderTexture(cubemapSize, cubemapSize, 16);</span><br><span class=\"line\">            renderTexture.dimension = UnityEngine.Rendering.TextureDimension.Cube;</span><br><span class=\"line\">            renderTexture.hideFlags = HideFlags.HideAndDontSave;</span><br><span class=\"line\">            GetComponent&lt;Renderer&gt;().sharedMaterial.SetTexture(&quot;_Cubemap&quot;, renderTexture);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        cam.transform.position = transform.position;</span><br><span class=\"line\">        cam.RenderToCubemap(renderTexture, faceMask);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>第59行中的“_Cubemap”为shader中cubemap的变量名（不是属性名）。将脚本拖入GameObject，就可以看到效果。</p>\n<h2 id=\"效果展示\"><a href=\"#效果展示\" class=\"headerlink\" title=\"效果展示\"></a>效果展示</h2><p><img src=\"../image/映射.png\" alt=\"包装设计\"><br>左下为折射，右下为反射，上方为菲涅尔反射。</p>\n","categories":[],"tags":[]}