{"total":8,"pageSize":10,"pageCount":1,"data":[{"title":"疫情在家作了个场景","slug":"疫情在家作了个场景","date":"2020-03-13T08:53:24.000Z","updated":"2020-05-21T08:10:39.526Z","comments":true,"path":"api/articles/疫情在家作了个场景.json","excerpt":"","keywords":null,"cover":"../image/建模.png","content":"<p>疫情原因在家，做一个场景项目。同时学习一下unity的HDRP渲染管线。</p>\n<h1 id=\"建模部分\"><a href=\"#建模部分\" class=\"headerlink\" title=\"建模部分\"></a>建模部分</h1><p>建模直接使用maya拉出房子，因为主要是学习unity，就不制作高模了。<br><img src=\"../image/建模.png\" alt=\"maya建模\"></p>\n<h1 id=\"材质制作\"><a href=\"#材质制作\" class=\"headerlink\" title=\"材质制作\"></a>材质制作</h1><p>材质制作使用到了substance designer。</p>\n<h2 id=\"石头材质\"><a href=\"#石头材质\" class=\"headerlink\" title=\"石头材质\"></a>石头材质</h2><p>石头材质一共制作了两个。另外一个是白色改色版，就不放出来了。<br><img src=\"../image/石块.png\" alt=\"大理石材质\"></p>\n<h2 id=\"地砖材质\"><a href=\"#地砖材质\" class=\"headerlink\" title=\"地砖材质\"></a>地砖材质</h2><p><img src=\"../image/地板.png\" alt=\"地砖材质\"></p>\n<h2 id=\"木纹材质\"><a href=\"#木纹材质\" class=\"headerlink\" title=\"木纹材质\"></a>木纹材质</h2><p><img src=\"../image/木纹.png\" alt=\"地砖材质\"></p>\n<h2 id=\"墙砖材质\"><a href=\"#墙砖材质\" class=\"headerlink\" title=\"墙砖材质\"></a>墙砖材质</h2><p><img src=\"../image/墙壁.png\" alt=\"地砖材质\"><br><del>本来还做了一个水波纹贴图，但是和场景不是很搭，最后没用上，就不放上来了。</del></p>\n<h1 id=\"绘制贴图\"><a href=\"#绘制贴图\" class=\"headerlink\" title=\"绘制贴图\"></a>绘制贴图</h1><p>使用substance painter绘制贴图<br><img src=\"../image/paint.png\" alt=\"paint\"></p>\n<h1 id=\"shader-gragh绘制流动水纹理\"><a href=\"#shader-gragh绘制流动水纹理\" class=\"headerlink\" title=\"shader gragh绘制流动水纹理\"></a>shader gragh绘制流动水纹理</h1><p>主要思路就是将两张相同，或者不同的水纹理法线图和高度图分别随时间移动并且融合。水体的颜色则用菲涅尔合成。<br>下图就是两张图UV随时间节点改变的路线图。<br><img src=\"../image/water/1.png\" alt=\"paint\"><br>根据这两个UV融合两张高度图，用于影响顶点坐标。<br><img src=\"../image/water/2.png\" alt=\"paint\"><br>根据菲涅尔反射程度对两个颜色进行插值，合成颜色。<br><img src=\"../image/water/3.png\" alt=\"paint\"><br>这是完整路线图。<br><img src=\"../image/water/4.png\" alt=\"paint\"><br>以下是水体shader的所有属性。<br><img src=\"../image/water/5.png\" alt=\"paint\"><br>水使用反射探针提供光照。最后完成下图的效果<br><img src=\"../image/water/001.gif\" alt=\"paint\"></p>\n<h1 id=\"最终效果展示\"><a href=\"#最终效果展示\" class=\"headerlink\" title=\"最终效果展示\"></a>最终效果展示</h1><p><img src=\"../image/HDRP场景.png\" alt=\"paint\"></p>\n","text":"疫情原因在家，做一个场景项目。同时学习一下unity的HDRP渲染管线。建模部分建模直接使用maya拉出房子，因为主要是学习unity，就不制作高模了。<br> [Figure] ","link":"","raw":null,"photos":[],"categories":[],"tags":[]},{"title":"C#编写3d立方体渲染窗口","slug":"C-编写3d立方体渲染窗口","date":"2020-03-06T06:56:59.000Z","updated":"2020-03-13T09:32:45.581Z","comments":true,"path":"api/articles/C-编写3d立方体渲染窗口.json","excerpt":"","keywords":null,"cover":"../image/002.gif","content":"<p>之前使用C#编写了一个立方体的渲染窗口。效果如下：<br><img src=\"../image/002.gif\" alt=\"窗口\"><br>粗糙地实现了一个立方体基本漫反射和全局光。让立方体随时间旋转。<br>本文主要讲一下摄像机部分的代码，和一个编写过程中的小问题。</p>\n<h1 id=\"摄像机类\"><a href=\"#摄像机类\" class=\"headerlink\" title=\"摄像机类\"></a>摄像机类</h1><h2 id=\"摄像机属性\"><a href=\"#摄像机属性\" class=\"headerlink\" title=\"摄像机属性\"></a>摄像机属性</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">private double posX,posY,posZ;//摄像机位置</span><br><span class=\"line\">private double xAngle, yAngle, zAngle;//摄像机旋转角度</span><br><span class=\"line\">private Vector4 xAxle, yAxle, zAxle;//摄像机坐标空间的下x、y、z轴在世界空间中的表示</span><br><span class=\"line\">private double fov;//视野角度</span><br><span class=\"line\">private double aspect;//宽比高</span><br><span class=\"line\">private double near;//近裁距离</span><br><span class=\"line\">private double far;//远裁距离</span><br></pre></td></tr></table></figure>\n<p>摄像机类的属性主要包括摄像机位置、摄像机旋转角度、摄像机坐标空间的下x、y、z轴在世界空间中的表示、视野角度、近裁距离和远裁距离。</p>\n<h2 id=\"摄像机类构造器\"><a href=\"#摄像机类构造器\" class=\"headerlink\" title=\"摄像机类构造器\"></a>摄像机类构造器</h2><p>没啥说的，构造器。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public Camera() &#123; &#125;</span><br><span class=\"line\">public Camera(double x,double y,double z)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tthis.fov = 90;</span><br><span class=\"line\">\tthis.aspect = 1;</span><br><span class=\"line\">\tthis.near = 2;</span><br><span class=\"line\">\tthis.far = 20000;</span><br><span class=\"line\">\tthis.posX = x;</span><br><span class=\"line\">\tthis.posY = y;</span><br><span class=\"line\">\tthis.posZ = z;</span><br><span class=\"line\">\tthis.xAngle = 0;</span><br><span class=\"line\">\tthis.yAngle = 0;</span><br><span class=\"line\">\tthis.zAngle = 0;</span><br><span class=\"line\">\tthis.xAxle = new Vector4(1, 0, 0, 0);</span><br><span class=\"line\">\tthis.yAxle = new Vector4(0, 1, 0, 0);</span><br><span class=\"line\">\tthis.zAxle = new Vector4(0, 0, 1, 0);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"摄像机类GetWorldtoView方法\"><a href=\"#摄像机类GetWorldtoView方法\" class=\"headerlink\" title=\"摄像机类GetWorldtoView方法\"></a>摄像机类GetWorldtoView方法</h2><p>调用此方法将返回一个世界空间到摄像机空间的变换矩阵。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public Matrix4x4 GetWorldtoView()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tMatrix4x4 view = new Matrix4x4();</span><br><span class=\"line\">\tview[4, 1] = posX;</span><br><span class=\"line\">\tview[4, 2] = posY;</span><br><span class=\"line\">\tview[4, 3] = posZ;</span><br><span class=\"line\">\tview[4, 4] = 1;</span><br><span class=\"line\">\tview[1, 1] = xAxle.x;</span><br><span class=\"line\">\tview[2, 1] = xAxle.y;</span><br><span class=\"line\">\tview[3, 1] = xAxle.z;</span><br><span class=\"line\">\tview[1, 2] = yAxle.x;</span><br><span class=\"line\">\tview[2, 2] = yAxle.y;</span><br><span class=\"line\">\tview[3, 2] = yAxle.z;</span><br><span class=\"line\">\tview[1, 3] = zAxle.x;</span><br><span class=\"line\">\tview[2, 3] = zAxle.y;</span><br><span class=\"line\">\tview[3, 3] = zAxle.z;</span><br><span class=\"line\">\treturn view;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"摄像机类的GetClip方法\"><a href=\"#摄像机类的GetClip方法\" class=\"headerlink\" title=\"摄像机类的GetClip方法\"></a>摄像机类的GetClip方法</h2><p>调用此方法返回一个摄像机空间到透视裁减空间的变换矩阵。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public Matrix4x4 GetClip()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tMatrix4x4 m = new Matrix4x4();</span><br><span class=\"line\">\tm[1, 1] = Math.Cos(this.fov / 360.0 * Math.PI) / this.aspect;</span><br><span class=\"line\">\tm[2, 2] = Math.Cos(this.fov / 360.0 * Math.PI);</span><br><span class=\"line\">\tm[3, 3] = -(this.far + this.near) / (this.far - this.near);</span><br><span class=\"line\">\tm[4, 3] = -(2 * this.near * this.far) / (this.far - this.near);</span><br><span class=\"line\">\tm[3, 4] = -1;</span><br><span class=\"line\">\treturn m;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>裁减空间变换矩阵：<br><img src=\"../image/裁剪矩阵.png\" alt=\"矩阵\"><br>图片来自网络<br>矩阵将xyz轴分别进行了缩放，使物体呈现近大远小的效果，并且满足-w≤x≤w、-w≤y≤w、-w≤z≤w的顶点才能不被剔除或裁减。</p>\n<h1 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h1><p>在编写过程中遇到个问题，立方体在旋转过程中不断的闪烁。查阅网络发现是没有开启双缓冲。只要在窗体类中的load方法中增加一下语句即可解决：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">this.SetStyle(ControlStyles.OptimizedDoubleBuffer | ControlStyles.ResizeRedraw | ControlStyles.AllPaintingInWmPaint, true);</span><br><span class=\"line\">this.UpdateStyles();</span><br></pre></td></tr></table></figure></p>\n","text":"之前使用C#编写了一个立方体的渲染窗口。效果如下：<br> [Figure] ","link":"","raw":null,"photos":[],"categories":[],"tags":[]},{"title":"Unity动态环境映射","slug":"Unity动态环境映射","date":"2020-02-15T08:29:00.000Z","updated":"2020-03-13T09:33:06.895Z","comments":true,"path":"api/articles/Unity动态环境映射.json","excerpt":"","keywords":null,"cover":"../image/映射.png","content":"<h1 id=\"使用C-脚本和shader实现动态环境映射\"><a href=\"#使用C-脚本和shader实现动态环境映射\" class=\"headerlink\" title=\"使用C#脚本和shader实现动态环境映射\"></a>使用C#脚本和shader实现动态环境映射</h1><h2 id=\"shader编写\"><a href=\"#shader编写\" class=\"headerlink\" title=\"shader编写\"></a>shader编写</h2><h3 id=\"反射\"><a href=\"#反射\" class=\"headerlink\" title=\"反射\"></a>反射</h3><p>先上代码<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Shader &quot;Custom/Reflection&quot;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    Properties</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        _Color (&quot;Color&quot;, Color) = (1,1,1,1)</span><br><span class=\"line\">        _ReflectColor(&quot;ReflectColor&quot;,Color) = (1,1,1,1)</span><br><span class=\"line\">        _ReflectAmount(&quot;ReflectAmount&quot;,Range(0,1)) = 1</span><br><span class=\"line\">        _Cubemap(&quot;Reflect Cubemap&quot;,Cube) = &quot;_Skybox&quot; &#123;&#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    SubShader</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">    \tpass&#123;</span><br><span class=\"line\">\t        Tags &#123; &quot;RenderType&quot;=&quot;Opaque&quot; &#125;</span><br><span class=\"line\">\t        LOD 200</span><br><span class=\"line\"></span><br><span class=\"line\">\t        CGPROGRAM</span><br><span class=\"line\">\t        // Physically based Standard lighting model, and enable shadows on all light types</span><br><span class=\"line\">\t        #pragma vertex vert</span><br><span class=\"line\">\t        #pragma fragment frag </span><br><span class=\"line\">\t        #include &quot;UnityCG.cginc&quot; </span><br><span class=\"line\">\t        #include &quot;Lighting.cginc&quot; </span><br><span class=\"line\">\t        #include &quot;AutoLight.cginc&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t        float4 _Color;</span><br><span class=\"line\">\t        float4 _ReflectColor;</span><br><span class=\"line\">\t        half _ReflectAmount;</span><br><span class=\"line\">\t        samplerCUBE _Cubemap;</span><br><span class=\"line\"></span><br><span class=\"line\">\t        struct a2v</span><br><span class=\"line\">\t        &#123;</span><br><span class=\"line\">\t            float4 vertex : POSITION;</span><br><span class=\"line\">\t\t\t    float3 normal : NORMAL;</span><br><span class=\"line\">\t        &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">\t        struct v2f &#123;</span><br><span class=\"line\">\t            float4 pos:POSITION ;</span><br><span class=\"line\">\t            float3 normal:NORMAL;</span><br><span class=\"line\">\t            float4 worldPos:TEXCOORD0;</span><br><span class=\"line\">\t            float3 worldViewDir:TEXCOORD1 ;</span><br><span class=\"line\"></span><br><span class=\"line\">\t            SHADOW_COORDS(3)</span><br><span class=\"line\">\t        &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">\t        v2f vert(a2v v) &#123;</span><br><span class=\"line\">\t            v2f o;</span><br><span class=\"line\">\t            o.pos = UnityObjectToClipPos(v.vertex);</span><br><span class=\"line\">\t            o.normal = v.normal;</span><br><span class=\"line\">\t            o.worldPos = mul(unity_ObjectToWorld,v.vertex );</span><br><span class=\"line\">\t            o.worldViewDir = UnityWorldSpaceViewDir(o.worldPos);</span><br><span class=\"line\"></span><br><span class=\"line\">\t            TRANSFER_SHADOW(o);</span><br><span class=\"line\">\t            return o;</span><br><span class=\"line\">\t        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t        fixed4 frag(v2f IN) :SV_Target&#123;</span><br><span class=\"line\">\t        \tfloat3 worldNormal = normalize(UnityObjectToWorldNormal(IN.normal));</span><br><span class=\"line\">\t        \tfloat3 worldLightDir = normalize(UnityWorldSpaceLightDir(IN.worldPos));</span><br><span class=\"line\">\t        \tfloat3 worldViewDir = normalize(IN.worldViewDir);</span><br><span class=\"line\">\t        \tfloat3 worldRefl = reflect(-worldViewDir,worldNormal);</span><br><span class=\"line\"></span><br><span class=\"line\">\t        \tfloat3 ambient = UNITY_LIGHTMODEL_AMBIENT.xyz;</span><br><span class=\"line\">\t        \tfloat3 diffuse = _LightColor0.rgb*_Color.rgb * max(0,dot(worldNormal ,worldLightDir));</span><br><span class=\"line\">\t        \tfloat3 reflection = texCUBE(_Cubemap,worldRefl ).rgb*_ReflectColor.rgb;</span><br><span class=\"line\">\t        \tUNITY_LIGHT_ATTENUATION(atten,IN,IN.worldPos);</span><br><span class=\"line\"></span><br><span class=\"line\">\t        \tfloat3 col = ambient+lerp(diffuse,reflection,_ReflectAmount)*atten;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t            return float4(col,1.0);</span><br><span class=\"line\">\t        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t        ENDCG</span><br><span class=\"line\">\t    &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    FallBack &quot;Diffuse&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>主要思路就是取得世界坐标系下的观察方向向量（worldViewDir）和世界坐标系下的法线向量。一起带入reflect（）函数，得出反射方向向量（worldRefl）。反射向量和_Cubemap一同带入texCUBE（）函数取得映射出的颜色，与反射颜色，漫反射颜色等相乘输出结果。</p>\n<h3 id=\"折射\"><a href=\"#折射\" class=\"headerlink\" title=\"折射\"></a>折射</h3><p>折射与反射类似，但是增加了一项反射率。稍微改改就可以了。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Shader &quot;Custom/refraction&quot;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    Properties</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        _Color (&quot;Color&quot;, Color) = (1,1,1,1)</span><br><span class=\"line\">        _RefractColor(&quot;RefractionColor&quot;,Color) = (1,1,1,1)</span><br><span class=\"line\">        _RefractAmount(&quot;RefractionAmount&quot;,Range(0,1)) = 1</span><br><span class=\"line\">        _RefractRatio(&quot;RefractRatio&quot;,Range(0,1)) = 0.5</span><br><span class=\"line\">        _Cubemap(&quot;Refraction Cubemap&quot;,Cube) = &quot;_Skybox&quot; &#123;&#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    SubShader</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">    \tpass&#123;</span><br><span class=\"line\">\t        Tags &#123; &quot;RenderType&quot;=&quot;Opaque&quot; &#125;</span><br><span class=\"line\">\t        LOD 200</span><br><span class=\"line\"></span><br><span class=\"line\">\t        CGPROGRAM</span><br><span class=\"line\">\t        // Physically based Standard lighting model, and enable shadows on all light types</span><br><span class=\"line\">\t        #pragma vertex vert</span><br><span class=\"line\">\t        #pragma fragment frag </span><br><span class=\"line\">\t        #include &quot;UnityCG.cginc&quot; </span><br><span class=\"line\">\t        #include &quot;Lighting.cginc&quot; </span><br><span class=\"line\">\t        #include &quot;AutoLight.cginc&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t        float4 _Color;</span><br><span class=\"line\">\t        float4 _RefractColor;</span><br><span class=\"line\">\t        half _RefractRatio;</span><br><span class=\"line\">\t        half _RefractAmount;</span><br><span class=\"line\">\t        samplerCUBE _Cubemap;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t        struct a2v</span><br><span class=\"line\">\t        &#123;</span><br><span class=\"line\">\t            float4 vertex : POSITION;</span><br><span class=\"line\">\t\t\t    float3 normal : NORMAL;</span><br><span class=\"line\">\t        &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">\t        struct v2f &#123;</span><br><span class=\"line\">\t            float4 pos:POSITION ;</span><br><span class=\"line\">\t            float3 normal:NORMAL;</span><br><span class=\"line\">\t            float4 worldPos:TEXCOORD0;</span><br><span class=\"line\">\t            float3 worldViewDir:TEXCOORD1 ;</span><br><span class=\"line\"></span><br><span class=\"line\">\t            SHADOW_COORDS(3)</span><br><span class=\"line\">\t        &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">\t        v2f vert(a2v v) &#123;</span><br><span class=\"line\">\t            v2f o;</span><br><span class=\"line\">\t            o.pos = UnityObjectToClipPos(v.vertex);</span><br><span class=\"line\">\t            o.normal = v.normal;</span><br><span class=\"line\">\t            o.worldPos = mul(unity_ObjectToWorld,v.vertex );</span><br><span class=\"line\">\t            o.worldViewDir = UnityWorldSpaceViewDir(o.worldPos);</span><br><span class=\"line\"></span><br><span class=\"line\">\t            TRANSFER_SHADOW(o);</span><br><span class=\"line\">\t            return o;</span><br><span class=\"line\">\t        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t        fixed4 frag(v2f IN) :SV_Target&#123;</span><br><span class=\"line\">\t        \tfloat3 worldNormal = normalize(UnityObjectToWorldNormal(IN.normal));</span><br><span class=\"line\">\t        \tfloat3 worldLightDir = normalize(UnityWorldSpaceLightDir(IN.worldPos));</span><br><span class=\"line\">\t        \tfloat3 worldViewDir = normalize(IN.worldViewDir);</span><br><span class=\"line\">\t        \tfloat3 worldRefr = refract(-worldViewDir,worldNormal,_RefractRatio);</span><br><span class=\"line\"></span><br><span class=\"line\">\t        \tfloat3 ambient = UNITY_LIGHTMODEL_AMBIENT.xyz;</span><br><span class=\"line\">\t        \tfloat3 diffuse = _Color.rgb * max(0,dot(worldNormal ,worldLightDir));</span><br><span class=\"line\">\t        \tfloat3 refraction = texCUBE(_Cubemap,worldRefr ).rgb*_RefractColor.rgb;</span><br><span class=\"line\">\t        \tUNITY_LIGHT_ATTENUATION(atten,IN,IN.worldPos);</span><br><span class=\"line\"></span><br><span class=\"line\">\t        \tfloat3 col = ambient+lerp(diffuse,refraction,_RefractAmount)*atten;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t            return float4(col,1.0);</span><br><span class=\"line\">\t        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t        ENDCG</span><br><span class=\"line\">\t    &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    FallBack &quot;Diffuse&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"菲涅尔反射\"><a href=\"#菲涅尔反射\" class=\"headerlink\" title=\"菲涅尔反射\"></a>菲涅尔反射</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Shader &quot;Custom/Fresnel&quot;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    Properties</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        _Color (&quot;Color&quot;, Color) = (1,1,1,1)</span><br><span class=\"line\">        _FresnelScale(&quot;FresnelScale&quot;,Range(0,1)) = 0.5</span><br><span class=\"line\">        _Cubemap(&quot;Reflect Cubemap&quot;,Cube) = &quot;_Skybox&quot; &#123;&#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    SubShader</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">    \tpass&#123;</span><br><span class=\"line\">\t        Tags &#123; &quot;RenderType&quot;=&quot;Opaque&quot; &#125;</span><br><span class=\"line\">\t        LOD 200</span><br><span class=\"line\"></span><br><span class=\"line\">\t        CGPROGRAM</span><br><span class=\"line\">\t        // Physically based Standard lighting model, and enable shadows on all light types</span><br><span class=\"line\">\t        #pragma vertex vert</span><br><span class=\"line\">\t        #pragma fragment frag </span><br><span class=\"line\">\t        #include &quot;UnityCG.cginc&quot; </span><br><span class=\"line\">\t        #include &quot;Lighting.cginc&quot; </span><br><span class=\"line\">\t        #include &quot;AutoLight.cginc&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t        float4 _Color;</span><br><span class=\"line\">\t        half _FresnelScale;</span><br><span class=\"line\">\t        samplerCUBE _Cubemap;</span><br><span class=\"line\"></span><br><span class=\"line\">\t        struct a2v</span><br><span class=\"line\">\t        &#123;</span><br><span class=\"line\">\t            float4 vertex : POSITION;</span><br><span class=\"line\">\t\t\t    float3 normal : NORMAL;</span><br><span class=\"line\">\t        &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">\t        struct v2f &#123;</span><br><span class=\"line\">\t            float4 pos:POSITION ;</span><br><span class=\"line\">\t            float3 normal:NORMAL;</span><br><span class=\"line\">\t            float4 worldPos:TEXCOORD0;</span><br><span class=\"line\">\t            float3 worldViewDir:TEXCOORD1 ;</span><br><span class=\"line\"></span><br><span class=\"line\">\t            SHADOW_COORDS(3)</span><br><span class=\"line\">\t        &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">\t        v2f vert(a2v v) &#123;</span><br><span class=\"line\">\t            v2f o;</span><br><span class=\"line\">\t            o.pos = UnityObjectToClipPos(v.vertex);</span><br><span class=\"line\">\t            o.normal = v.normal;</span><br><span class=\"line\">\t            o.worldPos = mul(unity_ObjectToWorld,v.vertex );</span><br><span class=\"line\">\t            o.worldViewDir = UnityWorldSpaceViewDir(o.worldPos);</span><br><span class=\"line\"></span><br><span class=\"line\">\t            TRANSFER_SHADOW(o);</span><br><span class=\"line\">\t            return o;</span><br><span class=\"line\">\t        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t        fixed4 frag(v2f IN) :SV_Target&#123;</span><br><span class=\"line\">\t        \tfloat3 worldNormal = normalize(UnityObjectToWorldNormal(IN.normal));</span><br><span class=\"line\">\t        \tfloat3 worldLightDir = normalize(UnityWorldSpaceLightDir(IN.worldPos));</span><br><span class=\"line\">\t        \tfloat3 worldViewDir = normalize(IN.worldViewDir);</span><br><span class=\"line\">\t        \tfloat3 worldRefl = reflect(-worldViewDir,worldNormal);</span><br><span class=\"line\"></span><br><span class=\"line\">\t        \tfloat3 ambient = UNITY_LIGHTMODEL_AMBIENT.xyz;</span><br><span class=\"line\">\t        \tfloat3 diffuse = _LightColor0.rgb*_Color.rgb * max(0,dot(worldNormal ,worldLightDir));</span><br><span class=\"line\">\t        \t</span><br><span class=\"line\">\t        \tfloat3 reflection = texCUBE(_Cubemap,worldRefl ).rgb;</span><br><span class=\"line\">\t        \tfloat3 fresnel = _FresnelScale+(1-_FresnelScale)*pow(1-dot(worldViewDir,worldNormal),5);</span><br><span class=\"line\"></span><br><span class=\"line\">\t        \tUNITY_LIGHT_ATTENUATION(atten,IN,IN.worldPos);</span><br><span class=\"line\"></span><br><span class=\"line\">\t        \tfloat3 col = ambient+lerp(diffuse,reflection,saturate(fresnel))*atten;</span><br><span class=\"line\"></span><br><span class=\"line\">\t            return float4(col,1.0);</span><br><span class=\"line\">\t        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t        ENDCG</span><br><span class=\"line\">\t    &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    FallBack &quot;Diffuse&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h3><p>这里三个shader中反射向量的计算都放在了片元着色器中，实际上放在顶点着色器里头就能达到很好的效果。且不那么占用系统资源。</p>\n<h2 id=\"C-代码\"><a href=\"#C-代码\" class=\"headerlink\" title=\"C#代码\"></a>C#代码</h2><p>这里的c#脚步直接摘录的unity文档中的代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">using UnityEngine;</span><br><span class=\"line\"></span><br><span class=\"line\">[ExecuteInEditMode]</span><br><span class=\"line\">public class RealtimeCubemap : MonoBehaviour</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    // Attach this script to an object that uses a Reflective shader.</span><br><span class=\"line\">    // Realtime reflective cubemaps!</span><br><span class=\"line\"></span><br><span class=\"line\">    int cubemapSize = 128;</span><br><span class=\"line\">    bool oneFacePerFrame = false;</span><br><span class=\"line\">    Camera cam;</span><br><span class=\"line\">    RenderTexture renderTexture;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    void Start()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        // render all six faces at startup</span><br><span class=\"line\">        UpdateCubemap(63);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    void OnDisable()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        DestroyImmediate(cam);</span><br><span class=\"line\">        DestroyImmediate(renderTexture);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    void LateUpdate()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        if (oneFacePerFrame)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            var faceToRender = Time.frameCount % 6;</span><br><span class=\"line\">            var faceMask = 1 &lt;&lt; faceToRender;</span><br><span class=\"line\">            UpdateCubemap(faceMask);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            UpdateCubemap(63); // all six faces</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    void UpdateCubemap(int faceMask)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        if (!cam)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            GameObject obj = new GameObject(&quot;CubemapCamera&quot;, typeof(Camera));</span><br><span class=\"line\">            obj.hideFlags = HideFlags.HideAndDontSave;</span><br><span class=\"line\">            obj.transform.position = transform.position;</span><br><span class=\"line\">            obj.transform.rotation = Quaternion.identity;</span><br><span class=\"line\">            cam = obj.GetComponent&lt;Camera&gt;();</span><br><span class=\"line\">            cam.farClipPlane = 100; // don&apos;t render very far into cubemap</span><br><span class=\"line\">            cam.enabled = false;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        if (!renderTexture)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            renderTexture = new RenderTexture(cubemapSize, cubemapSize, 16);</span><br><span class=\"line\">            renderTexture.dimension = UnityEngine.Rendering.TextureDimension.Cube;</span><br><span class=\"line\">            renderTexture.hideFlags = HideFlags.HideAndDontSave;</span><br><span class=\"line\">            GetComponent&lt;Renderer&gt;().sharedMaterial.SetTexture(&quot;_Cubemap&quot;, renderTexture);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        cam.transform.position = transform.position;</span><br><span class=\"line\">        cam.RenderToCubemap(renderTexture, faceMask);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>第59行中的“_Cubemap”为shader中cubemap的变量名（不是属性名）。将脚本拖入GameObject，就可以看到效果。</p>\n<h2 id=\"效果展示\"><a href=\"#效果展示\" class=\"headerlink\" title=\"效果展示\"></a>效果展示</h2><p><img src=\"../image/映射.png\" alt=\"包装设计\"><br>左下为折射，右下为反射，上方为菲涅尔反射。</p>\n","text":"使用C#脚本和shader实现动态环境映射shader编写反射先上代码<br>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19","link":"","raw":null,"photos":[],"categories":[],"tags":[]},{"title":"大学作品集","slug":"大学作品集","date":"2019-09-20T07:25:09.000Z","updated":"2019-09-20T09:07:19.201Z","comments":true,"path":"api/articles/大学作品集.json","excerpt":"","keywords":null,"cover":"../image/压缩成图.jpg","content":"<h1 id=\"室内设计\"><a href=\"#室内设计\" class=\"headerlink\" title=\"室内设计\"></a>室内设计</h1><p><img src=\"../image/压缩成图.jpg\" alt=\"3dmax室内设计\"><br>这张渲染图是刚刚学习3dmax和vray的时候的作品。有点瑕疵。</p>\n<h1 id=\"手枪建模\"><a href=\"#手枪建模\" class=\"headerlink\" title=\"手枪建模\"></a>手枪建模</h1><p><img src=\"../image/gun.png\" alt=\"maya及zbrush建模\"><br>一个手枪的建模，是我学习maya和zbrush的时候的学习作品。～～准备等学习完Substance Painter之后再上色。～～</p>\n<h1 id=\"其他作品\"><a href=\"#其他作品\" class=\"headerlink\" title=\"其他作品\"></a>其他作品</h1><p><img src=\"../image/压缩渲染图1.jpg\" alt=\"包装设计\"><br><img src=\"../image/产品3.jpg\" alt=\"包装设计\"><br><img src=\"../image/产品1.jpg\" alt=\"包装设计\"><br><img src=\"../image/装潢图2.jpg\" alt=\"包装设计\"></p>\n","text":"室内设计 [Figure] ","link":"","raw":null,"photos":[],"categories":[],"tags":[]},{"title":"shader语义绑定问题","slug":"shader语义绑定问题","date":"2019-06-24T14:50:47.000Z","updated":"2019-09-30T15:23:03.706Z","comments":true,"path":"api/articles/shader语义绑定问题.json","excerpt":"","keywords":null,"cover":"../image/语义绑定/错误.png","content":"<h1 id=\"一个关于shader语义绑定的问题\"><a href=\"#一个关于shader语义绑定的问题\" class=\"headerlink\" title=\"一个关于shader语义绑定的问题\"></a>一个关于shader语义绑定的问题</h1><p>学习shader语言的时候根据教程编辑了如下代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Shader &quot;Custom/NewSurfaceShader&quot;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    SubShader</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">    \tpass&#123;</span><br><span class=\"line\">\t    \tCGPROGRAM</span><br><span class=\"line\">\t    \t#pragma vertex vert </span><br><span class=\"line\">\t    \t#pragma fragment frag</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t    \tvoid vert(in float2 objPos:POSITION ,out float4 pos:POSITION,out float4 col:COLOR)</span><br><span class=\"line\">\t    \t&#123;</span><br><span class=\"line\">\t    \t\tpos = float4 (objPos,0,1);</span><br><span class=\"line\">\t    \t\tcol = pos;</span><br><span class=\"line\">\t    \t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t    \tvoid frag(inout float4 col:COLOR)</span><br><span class=\"line\">\t    \t&#123;</span><br><span class=\"line\">\t    \t&#125;</span><br><span class=\"line\">\t    \tENDCG\t</span><br><span class=\"line\">    \t&#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>按道理代表像素位置的<code>pos</code>属性和代表颜色的<code>col</code>属性是同一种基本类型，可以运算后会使图像四个顶点分别是不同的颜色，但是最后出来这个图像：<br><img src=\"../image/语义绑定/错误.png\" alt=\"错误图像\"><br>图像全部是黑色，<code>pos</code>数据没有成功传入<code>col</code>。上网查询最终找到问题。<a href=\"https://blog.csdn.net/a958832776/article/details/72626845\" target=\"_blank\" rel=\"noopener\">链接地址</a><br>cg中代码<code>col=pos</code>并不像java那样直接指向方法区中的数字。而是指向熟悉<code>pos</code>。在进入片段着色处理后只传入<code>col</code>而指向的<code>pos</code>没有传入，因此得不到数据。因此将<code>pos</code>想方设法传入片段着色器即可解决。<br>这里定义了一个结构体传入<code>frag</code>。<br>最终修改后的代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Shader &quot;Custom/NewSurfaceShader&quot;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    SubShader</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">    \tpass&#123;</span><br><span class=\"line\">\t    \tCGPROGRAM</span><br><span class=\"line\">\t    \t#pragma vertex vert </span><br><span class=\"line\">\t    \t#pragma fragment frag</span><br><span class=\"line\"></span><br><span class=\"line\">\t    \tstruct out_data</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t    \t\tfloat4 pos:POSITION;</span><br><span class=\"line\">\t    \t\tfloat4 col:COLOR;</span><br><span class=\"line\">\t    \t&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">\t    \tout_data vert(float2 objPos:POSITION)</span><br><span class=\"line\">\t    \t&#123;</span><br><span class=\"line\">\t    \t\tout_data data;</span><br><span class=\"line\">\t    \t\tdata.pos = float4 (objPos,0,1);</span><br><span class=\"line\">\t    \t\tdata.col = data.pos;</span><br><span class=\"line\">\t    \t\treturn data;</span><br><span class=\"line\">\t    \t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t    \tfloat4 frag(out_data data):COLOR</span><br><span class=\"line\">\t    \t&#123;</span><br><span class=\"line\">\t    \t\treturn data.col;</span><br><span class=\"line\">\t    \t&#125;</span><br><span class=\"line\">\t    \tENDCG\t</span><br><span class=\"line\">    \t&#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>修改后的图像<br><img src=\"../image/语义绑定/修改.png\" alt=\"错误图像\"></p>\n","text":"一个关于shader语义绑定的问题学习shader语言的时候根据教程编辑了如下代码：<br>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>1","link":"","raw":null,"photos":[],"categories":[],"tags":[]},{"title":"第一个shader代码","slug":"第一个shader代码","date":"2019-06-22T14:49:16.000Z","updated":"2019-09-27T15:19:08.554Z","comments":true,"path":"api/articles/第一个shader代码.json","excerpt":"","keywords":null,"cover":null,"content":"<h1 id=\"学习shader第一天！\"><a href=\"#学习shader第一天！\" class=\"headerlink\" title=\"学习shader第一天！\"></a>学习shader第一天！</h1><p>刚刚开始学习unity着色器写个博客记录一下。</p>\n<h2 id=\"人生中写的第一个shader：\"><a href=\"#人生中写的第一个shader：\" class=\"headerlink\" title=\"人生中写的第一个shader：\"></a>人生中写的第一个shader：</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Shader &quot;Skin/test2&quot;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    Properties&#123;</span><br><span class=\"line\">    \t_MainTex (&quot;Albedo&quot;,2D) = &quot;white&quot; &#123;&#125;</span><br><span class=\"line\">    \t_Color (&quot;MainColor&quot;,Color) = (1,0,0,1)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    SubShader &#123;</span><br><span class=\"line\">    \tCGPROGRAM</span><br><span class=\"line\">    \t#pragma surface surf Lambert</span><br><span class=\"line\">    \tstruct Input &#123;</span><br><span class=\"line\">    \t\tfloat2 uv_MainTex;</span><br><span class=\"line\">    \t&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    \tsampler2D _MainTex;</span><br><span class=\"line\">    \tfloat4 _Color;</span><br><span class=\"line\"></span><br><span class=\"line\">    \tvoid surf(Input IN,inout SurfaceOutput o)&#123;</span><br><span class=\"line\">    \t\to.Albedo = tex2D (_MainTex,IN.uv_MainTex).rgb* _Color.rgb;</span><br><span class=\"line\">    \t&#125;</span><br><span class=\"line\">    \tENDCG</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>写完和官方基本便面着色器<code>Standard Surface Shader</code>对比了一下。。发现这就是个阉割版的基础shader。。</p>\n<h2 id=\"官方基础着色器代码\"><a href=\"#官方基础着色器代码\" class=\"headerlink\" title=\"官方基础着色器代码\"></a>官方基础着色器代码</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Shader &quot;Custom/NewSurfaceShader&quot;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    Properties</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        _Color (&quot;Color&quot;, Color) = (1,1,1,1)</span><br><span class=\"line\">        _MainTex (&quot;Albedo (RGB)&quot;, 2D) = &quot;white&quot; &#123;&#125;</span><br><span class=\"line\">        _Glossiness (&quot;Smoothness&quot;, Range(0,1)) = 0.5</span><br><span class=\"line\">        _Metallic (&quot;Metallic&quot;, Range(0,1)) = 0.0</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    SubShader</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Tags &#123; &quot;RenderType&quot;=&quot;Opaque&quot; &#125;</span><br><span class=\"line\">        LOD 200</span><br><span class=\"line\"></span><br><span class=\"line\">        CGPROGRAM</span><br><span class=\"line\">        // Physically based Standard lighting model, and enable shadows on all light types</span><br><span class=\"line\">        #pragma surface surf Standard fullforwardshadows</span><br><span class=\"line\"></span><br><span class=\"line\">        // Use shader model 3.0 target, to get nicer looking lighting</span><br><span class=\"line\">        #pragma target 3.0</span><br><span class=\"line\"></span><br><span class=\"line\">        sampler2D _MainTex;</span><br><span class=\"line\"></span><br><span class=\"line\">        struct Input</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            float2 uv_MainTex;</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">        half _Glossiness;</span><br><span class=\"line\">        half _Metallic;</span><br><span class=\"line\">        fixed4 _Color;</span><br><span class=\"line\"></span><br><span class=\"line\">        // Add instancing support for this shader. You need to check &apos;Enable Instancing&apos; on materials that use the shader.</span><br><span class=\"line\">        // See https://docs.unity3d.com/Manual/GPUInstancing.html for more information about instancing.</span><br><span class=\"line\">        // #pragma instancing_options assumeuniformscaling</span><br><span class=\"line\">        UNITY_INSTANCING_BUFFER_START(Props)</span><br><span class=\"line\">            // put more per-instance properties here</span><br><span class=\"line\">        UNITY_INSTANCING_BUFFER_END(Props)</span><br><span class=\"line\"></span><br><span class=\"line\">        void surf (Input IN, inout SurfaceOutputStandard o)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            // Albedo comes from a texture tinted by color</span><br><span class=\"line\">            fixed4 c = tex2D (_MainTex, IN.uv_MainTex) * _Color;</span><br><span class=\"line\">            o.Albedo = c.rgb;</span><br><span class=\"line\">            // Metallic and smoothness come from slider variables</span><br><span class=\"line\">            o.Metallic = _Metallic;</span><br><span class=\"line\">            o.Smoothness = _Glossiness;</span><br><span class=\"line\">            o.Alpha = c.a;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        ENDCG</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    FallBack &quot;Diffuse&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>基本的使用的是<code>Standard fullforwardshadows</code>光照模型。有金属度和光泽度属性。和一个表示不透明物体渲染类型的标签<code>Tag</code>.<br><code>LOD</code>则表示着色器细节等级，用于确定不同画质下shader是否调用。<br>最后一句<code>FallBack &quot;Diffuse&quot;</code>用于在由于硬件或者其他问题，shader没有被正常执行的时候执行回滚操作。</p>\n","text":"学习shader第一天！刚刚开始学习unity着色器写个博客记录一下。人生中写的第一个shader：1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<","link":"","raw":null,"photos":[],"categories":[],"tags":[]},{"title":"希尔排序实现代码","slug":"希尔排序实现代码","date":"2019-06-11T13:40:13.000Z","updated":"2019-06-11T13:52:59.123Z","comments":true,"path":"api/articles/希尔排序实现代码.json","excerpt":"","keywords":null,"cover":null,"content":"<p>简单的希尔排序代码：<br>更加优秀的增量序列是<code>9*4^i-9*2^i+1</code>和<code>4^i-3*2^i+1</code>形式排序出的数组序列<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class ShellSort2 &lt;AnyType extends Comparable&lt;? super AnyType&gt;&gt;&#123;</span><br><span class=\"line\">\tpublic static &lt;AnyType extends Comparable&lt;? super AnyType&gt;&gt;AnyType[] sort(AnyType[] a) &#123;</span><br><span class=\"line\">\t\tint x;</span><br><span class=\"line\">\t\tfor(int i = (a.length/2);i&gt;0;i /= 2) &#123;</span><br><span class=\"line\">\t\t\tfor(int j = i;j&lt;a.length;j++) &#123;</span><br><span class=\"line\">\t\t\t\tAnyType tmp = a[j];</span><br><span class=\"line\">\t\t\t\tfor(x = j;x&gt;=i&amp;&amp;(tmp.compareTo(a[x-i])&lt;0);x-=i) &#123;</span><br><span class=\"line\">\t\t\t\t\ta[x] = a[x-i];</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\ta[x] = tmp;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\treturn a;</span><br><span class=\"line\">\t&#125;</span><br></pre></td></tr></table></figure></p>\n","text":"简单的希尔排序代码：<br>更加优秀的增量序列是9*4^i-9*2^i+1和4^i-3*2^i+1形式排序出的数组序列<br>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>pu","link":"","raw":null,"photos":[],"categories":[],"tags":[]},{"title":"快速排序实现代码","slug":"快速排序实现代码","date":"2019-06-11T13:17:47.000Z","updated":"2019-06-11T13:39:47.741Z","comments":true,"path":"api/articles/快速排序实现代码.json","excerpt":"","keywords":null,"cover":null,"content":"<p>快速排序代码：<br>其中<code>insertionSort</code>插入排序可以使用副任意简单的排序算法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class QuickSort &lt;AnyType extends Comparable&lt;? super AnyType&gt;&gt;&#123;</span><br><span class=\"line\">\tprivate final static int CUTOFF = 4;</span><br><span class=\"line\">\tpublic static &lt;AnyType extends Comparable&lt;? super AnyType&gt;&gt;AnyType median(AnyType [] a,int left, int right) &#123;</span><br><span class=\"line\">\t\tint center  = (left+right)&gt;&gt;1;</span><br><span class=\"line\">\t\tif(a[left].compareTo(a[center])&gt;0) &#123;</span><br><span class=\"line\">\t\t\tchange(a,left,center);</span><br><span class=\"line\">\t\t&#125;if(a[left].compareTo(a[right])&gt;0) &#123;</span><br><span class=\"line\">\t\t\tchange(a,right,left);</span><br><span class=\"line\">\t\t&#125;if(a[right].compareTo(a[center])&lt;0) &#123;</span><br><span class=\"line\">\t\t\tchange(a,right,center);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tchange(a,center,right-1);</span><br><span class=\"line\">\t\treturn a[right -1];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpublic static &lt;AnyType extends Comparable&lt;? super AnyType&gt;&gt;AnyType[] change(AnyType [] a,int i,int j) &#123;</span><br><span class=\"line\">\t\tAnyType b = a[i];</span><br><span class=\"line\">\t\ta[i] = a[j];</span><br><span class=\"line\">\t\ta[j] = b;</span><br><span class=\"line\">\t\treturn a;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpublic static &lt;AnyType extends Comparable&lt;? super AnyType&gt;&gt;AnyType[] Sort(AnyType [] a,int left ,int right) &#123;\t\t</span><br><span class=\"line\">\t\tif(left+CUTOFF&lt;=right) &#123;</span><br><span class=\"line\">\t\t\tAnyType pivot = median(a,left,right);</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\tint i = left;</span><br><span class=\"line\">\t\t\tint j = right-1;</span><br><span class=\"line\">\t\t\twhile (true)&#123;</span><br><span class=\"line\">\t\t\t\twhile(a[++i].compareTo(pivot)&lt;0) &#123;&#125;</span><br><span class=\"line\">\t\t\t\twhile(a[--j].compareTo(pivot)&gt;0) &#123;&#125;</span><br><span class=\"line\">\t\t\t\tif(i&lt;j) &#123;</span><br><span class=\"line\">\t\t\t\t\tchange(a,i,j);</span><br><span class=\"line\">\t\t\t\t&#125;else&#123;break;&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tchange(a,i,right-1);</span><br><span class=\"line\">\t\t\tSort(a,left,i-1);</span><br><span class=\"line\">\t\t\tSort(a,i+1,right);</span><br><span class=\"line\">\t\t\treturn a;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t&#125;else &#123;</span><br><span class=\"line\">\t\t\tinsertionSort(a,left,right);</span><br><span class=\"line\">\t\t\treturn a;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpublic static &lt;AnyType extends Comparable&lt;? super AnyType&gt;&gt;AnyType[] insertionSort(AnyType[] a,int left,int right) &#123;</span><br><span class=\"line\">\t\tint j;</span><br><span class=\"line\">\t\tfor(int i = left+1;i&lt;=right;i++) &#123;</span><br><span class=\"line\">\t\t\tAnyType tmp = a[i];</span><br><span class=\"line\">\t\t\tfor(j = i;j&gt;left&amp;&amp;tmp.compareTo(a[j-1])&lt;0;j--) &#123;</span><br><span class=\"line\">\t\t\t\ta[j] = a[j-1];</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\ta[j] = tmp;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\treturn a;</span><br><span class=\"line\">\t&#125;</span><br></pre></td></tr></table></figure></p>\n","text":"快速排序代码：<br>其中insertionSort插入排序可以使用副任意简单的排序算法<br>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br","link":"","raw":null,"photos":[],"categories":[],"tags":[]}]}